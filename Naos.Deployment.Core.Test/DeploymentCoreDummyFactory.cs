// --------------------------------------------------------------------------------------------------------------------
// <copyright file="DeploymentCoreDummyFactory.cs" company="Naos Project">
//    Copyright (c) Naos Project 2019. All rights reserved.
// </copyright>
// <auto-generated>
//   Sourced from NuGet package Naos.Build.Conventions.VisualStudioProjectTemplates.Domain.Test (1.55.46)
// </auto-generated>
// --------------------------------------------------------------------------------------------------------------------

namespace Naos.Deployment.Core.Test
{
    using System;
    using System.Threading;
    using FakeItEasy;
    using Naos.Deployment.Domain;
    using Naos.FileJanitor.Domain;
    using OBeautifulCode.AutoFakeItEasy;

    /// <summary>
    /// A Dummy Factory for types in <see cref="Naos.Deployment.Core"/>.
    /// </summary>
#if !NaosEmailSolution
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [System.CodeDom.Compiler.GeneratedCode("Naos.Email.Domain.Test", "See package version number")]
    internal
#else
    public
#endif
    class DeploymentCoreDummyFactory : DefaultDeploymentCoreDummyFactory
    {
        public DeploymentCoreDummyFactory()
        {
            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () =>
                {
                    var databaseName = Guid.NewGuid().ToString().Replace("-", string.Empty);

                    var result = new BackupAndPersistDatabaseOp(databaseName, A.Dummy<TimeSpan>());

                    return result;
                });

            AutoFixtureBackedDummyFactory.AddDummyCreator(
                () =>
                {
                    var databaseName = Guid.NewGuid().ToString().Replace("-", string.Empty);

                    var result = new DownloadAndRestoreDatabaseOp(databaseName, A.Dummy<TimeSpan>(), A.Dummy<string>(), A.Dummy<MultipleKeysFoundStrategy>());

                    return result;
                });
        }
    }
}